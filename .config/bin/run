#!/bin/sh

set -e

# First, check if the jq and fzf commands are available
# AND there is a package.json file in the current directory
if command -v jq &>/dev/null && command -v fzf &>/dev/null [[ -f "package.json" ]]; then
  # if we have jq and fzf,
  # then get the list of scripts from package.json
  # and use fzf to select one to run
  DEV_SCRIPT="$(jq -r '.scripts' package.json | \
    sed '1d;$d' | \
    fzf --height 30% --reverse -1 -0 -d ',' --with-nth=1 --header 'Select npm script to run' | \
    awk -F ': ' '{gsub(/"/, "", $1); gsub(/[ ]+/, " ", $1); gsub(/^[ ]|[ ]$/, "", $1); print $1}')"
fi

if [[ -z "${DEV_SCRIPT// /}" ]]; then
  exit 0
fi

if [ -f "run" ]; then
	./run "$@"
	exit 0
fi

if [ -f yarn.lock ]; then
	echo "yarn $DEV_SCRIPT"
	yarn "$DEV_SCRIPT"
	exit 0
fi

if [ -f pnpm-lock.yaml ]; then
	echo "pnpm run $DEV_SCRIPT"
	pnpm run "$DEV_SCRIPT"
	exit 0
fi

if [ -f bun.lockb ]; then
	echo "bun $DEV_SCRIPT"
	pnpm run "$DEV_SCRIPT"
	exit 0
fi

if [ -f package-lock.json ]; then
  echo "npm run $DEV_SCRIPT"
  npm run "$DEV_SCRIPT"
  exit 0
fi

BASE_NAME="$(basename "$(pwd)")"

cd ..
if [ -f pnpm-lock.yaml ]; then
	cd "$BASE_NAME" || exit
	pnpm run "$DEV_SCRIPT"
	exit 0
fi

PARENT_BASE_NAME="$(basename "$(pwd)")"

cd ..
if [ -f pnpm-lock.yaml ]; then
	cd "$PARENT_BASE_NAME" || exit
	cd "$BASE_NAME" || exit
	pnpm run "$DEV_SCRIPT"
	exit 0
fi

echo " Node package not detected"
exit 1
